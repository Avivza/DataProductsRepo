for(i in 2:10){
mat[i,1]<-mat[i-1,1]+0.1*mat[i-1,2]*mat[i-1,1]-0.05*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.1*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.1*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.1*mat[i-1,3]*mat[i-1,2]
if (p<=0) {break}
if (h<=0) {break}
if (g<=0) {break}
}
mat
}
pop(10,12,100)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:10){
mat[i,1]<-mat[i-1,1]+0.1*mat[i-1,2]*mat[i-1,1]-0.05*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.1*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.1*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.1*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {break}
if (mat[i,2]<=0) {break}
if (mat[i,3]<=0) {break}
}
mat
}
pop(10,12,100)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:10){
mat[i,1]<-mat[i-1,1]+0.1*mat[i-1,2]*mat[i-1,1]-0.05*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.1*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.1*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.1*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0,break}
if (mat[i,2]<=0) {mat[i,2]=0,break}
if (mat[i,3]<=0) {mat[i,3]=0,break}
}
mat
}
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:10){
mat[i,1]<-mat[i-1,1]+0.1*mat[i-1,2]*mat[i-1,1]-0.05*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.1*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.1*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.1*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
mat
}
pop(10,12,100)
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
pop(input$pred,input$herb,input$grass)[,1],type="l"
pop(input$pred,input$herb,input$grass)[,1],type="l")
pop(input$pred,input$herb,input$grass)[,1]
pop(10,12,13)
matplot(pop(10,12,13))
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
?matplot
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
matplot(pop(10,11,12))
matplot(pop(10,11,12),type=c("b"))
matplot(pop(10,11,12),type="l")
matplot(pop(10,11,12),type=("l"))
matplot(pop(10,11,12),type=("l"))
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
?,atplot
?matplot
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat)
}
pop(10,12,13)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]")
})
}
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]")
}
pop(10,12,13)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]")
legend("bottomright")
}
pop(10,12,13)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]")
legend("bottomright", inset=.05, legend=c("b", "c"), pch=1, col=c(2,4), horiz=TRUE)
}
pop(10,12,13)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]")
legend("bottomright",  legend=c("b", "c"), pch=1, col=c(2,4), horiz=TRUE)
}
library(shiny)
shinyServer(
function(input,output){
output$graph<-renderPlot(matplot(pop(input$pred,input$herb,input$grass),type ="l",xlab="Time",ylab="Population Size[Individuals]"))
}
)
pop(10,12,13)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]")
legend("upleft",  legend=c("b", "c"), pch=1, col=c(2,4), horiz=TRUE)
}
pop(10,12,13)
?legend
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]")
legend("topleft",  legend=c("b", "c"), pch=1, col=c(2,4), horiz=TRUE)
}
pop(10,12,13)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]",col=c(2,4,6))
legend("topleft",  legend=c("b", "c"), pch=1, col=c(2,4), horiz=TRUE)
}
pop(10,12,13)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]",col=c(2,4,6))
legend("topleft",  legend=c("Predator", "Prey","Grass"), pch=1, col=c(2,4,6), horiz=TRUE)
}
pop(10,12,13)
?matplot
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]",col=c(2,4,6))
legend("topleft",  legend=c("Predator", "Prey","Grass"), col=c(2,4,6), horiz=TRUE)
}
pop(10,12,13)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]",lwd=2, col=c(2,4,6))
legend("topleft",  legend=c("Predator", "Prey","Grass"),lwd=2, col=c(2,4,6), horiz=TRUE)
}
pop(10,12,13)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]",lwd=2,lty=1, col=c(2,4,6))
legend("topleft",  legend=c("Predator", "Prey","Grass"),lwd=2, col=c(2,4,6), horiz=TRUE)
}
pop(10,12,13)
pop<-function(p,h,g){
mat<-data.frame()
mat[1,1]<-p
mat[1,2]<-h
mat[1,3]<-g
for(i in 2:50){
mat[i,1]<-mat[i-1,1]+0.01*mat[i-1,2]*mat[i-1,1]-0.01*mat[i-1,1]
mat[i,2]<-mat[i-1,2]+0.01*mat[i-1,3]*mat[i-1,2]-0.05*mat[i-1,2]-0.01*mat[i-1,2]*mat[i-1,1]
mat[i,3]<-mat[i-1,3]+0.1*mat[i-1,3]-0.05*mat[i-1,3]-0.01*mat[i-1,3]*mat[i-1,2]
if (mat[i,1]<=0) {mat[i,1]=0
break}
if (mat[i,2]<=0) {mat[i,2]=0
break}
if (mat[i,3]<=0) {mat[i,3]=0
break}
}
plt<-matplot(mat,type ="l",xlab="Time",ylab="Population Size[Individuals]",lwd=2,lty=1, col=c(2,3,4))
legend("topleft",  legend=c("Predator", "Prey","Grass"),lwd=2, col=c(2,3,4), horiz=TRUE)
}
pop(10,12,13)
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
?plot
?matplot
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
shiny::runApp('Coursera/data_products/Project')
a<-c(2,4,5)
b<-c(1,6,3)
c<-c(6,2,4.5)
persp3d(a)
persp(a)
library(rgl)
persp3d(a)
?persp3d
?rgl
x <- c(0, 1, 0, 0)
y <- c(0, 0, 1, 0)
z <- c(0, 0, 0, 1)
labels <- c("Origin", "X", "Y", "Z")
i <- c(1, 2, 1, 3, 1, 4)
open3d()
text3d(x, y, z, labels)
text3d(1, 1, 1, "*3d coordinates")
segments3d(x[i], y[i], z[i])
rgl.open()
rgl.texts(x, y, z, labels)
rgl.texts(1, 1, 1, "rgl.* coordinates")
rgl.lines(x[i], y[i], z[i])
rm(i)
rm(x)
rm(y)
rm(z)
rm(z)
rm(labels)
triangles3d(a)
triangles3d(a,b,c)
plot(a)
quads3d(a)
quads3d(a,b,c)
M <- matrix(rnorm(36), 3, 12, dimnames = list(c('x', 'y', 'z'),
rep(LETTERS[1:4], 3)))
# Show 12 random vertices in various ways.
M <- matrix(rnorm(36), 3, 12, dimnames = list(c('x', 'y', 'z'),
rep(LETTERS[1:4], 3)))
# Force 4-tuples to be convex in planes so that quads3d works.
for (i in c(1, 5, 9)) {
quad <- as.data.frame(M[, i + 0:3])
coeffs <- runif(2, 0, 3)
if (mean(coeffs) < 1) coeffs <- coeffs + 1 - mean(coeffs)
quad$C <- with(quad, coeffs[1]*(B - A) + coeffs[2]*(D - A) + A)
M[, i + 0:3] <- as.matrix(quad)
}
open3d()
# Rows of M are x, y, z coords; transpose to plot
M <- t(M)
shift <- matrix(c(-3, 3, 0), 12, 3, byrow = TRUE)
points3d(M)
lines3d(M + shift)
segments3d(M + 2*shift)
triangles3d(M + 3*shift, col = 'red')
quads3d(M + 4*shift, col = 'green')
text3d(M + 5*shift, texts = 1:12)
# Add labels
shift <- outer(0:5, shift[1, ])
shift[, 1] <- shift[, 1] + 3
text3d(shift,
texts = c('points3d', 'lines3d', 'segments3d',
'triangles3d', 'quads3d', 'text3d'),
adj = 0)
rgl.bringtotop()
rm(m)
rm(M)
rm(quad)
rm(shift)
rm(coeffs)
rm(i)
plot(a)
abline(b)
points(b)
points(c)
setwd("C:/Users/Aviv_Lab/Dropbox_tech/Dropbox/R/Coursera/data_products/Project")
setwd("C:/Users/Aviv_Lab/Dropbox_tech/Dropbox/R/Coursera/data_products/Project/APP")
runApp()
library(shiny)
runApp()
devtools::install_github('rstudio/shinyapps')
setwd("C:/Users/Aviv_Lab/Dropbox_tech/Dropbox/R/Coursera/data_products/Project")
shinyapps::setAccountInfo(name='avivza', token='D95EE371838C097AC09AE881CB237054', secret='ICe9ZCUXJIZARMJZDrbDCf6QbXddwPPbvuTvBKxn')
setwd("C:/Users/Aviv_Lab/Dropbox_tech/Dropbox/R/Coursera/data_products/Project/APP")
library(shinyapps)
deployApp()
shinyapps::setAccountInfo(name='avivza', token='D95EE371838C097AC09AE881CB237054', secret='ICe9ZCUXJIZARMJZDrbDCf6QbXddwPPbvuTvBKxn')
deployApp()
shinyapps::setAccountInfo(name='avivza',
token='D95EE371838C097AC09AE881CB237054',
secret='<SECRET>')
shinyapps::setAccountInfo(name='avivza',
token='D95EE371838C097AC09AE881CB237054',
secret='ICe9ZCUXJIZARMJZDrbDCf6QbXddwPPbvuTvBKxn')
shinyapps::setAccountInfo(name='avivza',
token='D95EE371838C097AC09AE881CB237054',
secret='ICe9ZCUXJIZARMJZDrbDCf6QbXddwPPbvuTvBKxn')
deployApp()
getwd()
deployApp(getwd())
